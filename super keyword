after method overriding if we want to acess the parent class method we use super keyword.
class parent111
{
	public void show()
	{
		System.out.println("parent show method");
	}
	public void display()
	{
		System.out.println("parent display method");
	}
}
class child111 extends parent111
{
	public void show()
	{
		super.show();
		System.out.println("child show method");
	
	}
	public void msg()
	{
		System.out.println("child msg method");
	}
}
public class methodoverriding {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		child111 c=new child111();
		c.show();
		c.display();
		c.msg();


	}

}
output:
parent show method
child show method
parent display method
child msg method
*method overriding is used to execute its own behaviour by hiding the implementation of parent class.
but in some cases there is need to call parent class method through child class then we use super class.
eg:
import java.util.Scanner;
class number1 {
	int x;
	Scanner sc=new Scanner(System.in);
	public void getno()
	{
		System.out.println("enter a number");
		x=sc.nextInt();
		
	}
	void show()
	{
		System.out.println("decimaal:"+x);
	}
	

}
class hexa extends number1{
	void show()
	{
		super.show();
		System.out.println("hexa:"+Integer.toHexString(x));
		
	}
}
class octal extends number1
{
	void show()
	{
		super.show();
		System.out.println("octal:"+Integer.toOctalString(x));
	}
}
public class number
{
	public static void main(String[] args)
	{
		hexa h=new hexa();
		octal o=new octal();
		h.getno();
		h.show();
		System.out.println();
		o.getno();
		o.show();
		
		
	}
}
output:
enter a number
13
decimaal:13
hexa:d

enter a number
13
decimaal:13
octal:15


